{"version":3,"sources":["view/img/logo.png","view/img/tarneeb.png","view/img/badge.png","view/component/LogIn/LogIn.js","view/component/Register/Register.js","view/component/MainPage/MainPage.jsx","view/component/SidebarData.js","view/component/SideBar/SideBar.jsx","view/component/Games/Games.js","view/component/Tarneeb/Tarneeb.js","App.js","serviceWorker.js","index.js","view/img/chair.png"],"names":["module","exports","LogIn","history","useHistory","className","onSubmit","e","preventDefault","target","elements","userEmail","password","value","console","log","fetch","method","body","JSON","stringify","headers","then","res","json","data","success","error","replace","confirmAlert","title","message","buttons","label","onClick","type","name","placeholder","required","id","push","Register","imgurl","MainPage","useContext","UserContext","userName","userPic","setUserName","setUserPic","nav","setNav","setUserEmail","src","logo","alt","SidebarData","path","icon","cNam","SideBar","useState","sidebar","setSidebar","showSidebar","Provider","color","to","map","item","index","key","Cookies","remove","Games","window","location","reload","tarneeb","players","pic","chair","Tarneeb","palyer","setPlayer","useEffect","info","handleSitPlayer","newPlayers","table","createContext","App","token","get","decoded","jwt","decode","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1f155bbe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c7c734b8.png\";","module.exports = __webpack_public_path__ + \"static/media/tarneeb.d1d4f2b4.png\";","module.exports = __webpack_public_path__ + \"static/media/badge.9fff63b2.png\";","import React from \"react\"\r\nimport \"./LogIn.css\"\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nconst LogIn = () => {\r\n    const history = useHistory()\r\n    const handleLoginSubmit = (e) => {\r\n        e.preventDefault();\r\n        let { userEmail, password } = e.target.elements;\r\n        userEmail = userEmail.value;\r\n        password = password.value\r\n        console.log(userEmail, password)\r\n\r\n        fetch('/api/users/logIn', {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ userEmail, password }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                const { success, error } = data\r\n                if (success) {\r\n                    history.replace(\"/mainPage\")\r\n                }\r\n                else {\r\n                    confirmAlert({\r\n                        title: 'Confirm to submit',\r\n                        message: `${error}`,\r\n                        buttons: [\r\n                            {\r\n                                label: 'Ok',\r\n                                onClick: () => { }\r\n                            },\r\n\r\n                        ]\r\n                    });\r\n                }\r\n            })\r\n    }\r\n    const handleRegisrtPage = () => {\r\n        history.push(\"/register\")\r\n    }\r\n    return (\r\n        <div className=\"login__page\">\r\n\r\n\r\n            <h1>Log-In</h1>\r\n            <form onSubmit={handleLoginSubmit}>\r\n                <label>Email:</label>\r\n                <input type='text' name='userEmail' placeholder=\"User Email\" required />\r\n                <label>Password:</label>\r\n                <input type='password' name='password' placeholder=\"Password\" required />\r\n                <button type='submit'>Log-In</button>\r\n            </form>\r\n            <button id=\"registerBtn\" onClick={handleRegisrtPage}>Register</button>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default LogIn","import React from \"react\"\r\nimport \"./Register.css\"\r\nimport { useHistory } from \"react-router-dom\";\r\nconst Register = () => {\r\n    const history = useHistory()\r\n    const handleRegisterSubmit = (e) => {\r\n        e.preventDefault();\r\n        let { userEmail, name, imgurl, password } = e.target.elements;\r\n        userEmail = userEmail.value;\r\n        name = name.value\r\n        imgurl = imgurl.value\r\n        password = password.value\r\n        console.log(userEmail, name, imgurl, password)\r\n\r\n        fetch('/api/users/register', {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ userEmail, name, imgurl, password }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                console.log(data)\r\n                history.replace(\"/\")\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"register__page\">\r\n            <h1>Register</h1>\r\n            <form onSubmit={handleRegisterSubmit}>\r\n                <label>Email:</label>\r\n                <input type='text' name='userEmail' placeholder=\"User Email\" required />\r\n                <label>Name:</label>\r\n                <input type='text' name='name' placeholder=\"Nmae\" required />\r\n\r\n                <label> Profile Picture:</label>\r\n                <input type='text' name='imgurl' placeholder=\"User Img\" required />\r\n                <label>Password:</label>\r\n                <input type='password' name='password' placeholder=\"Password\" required />\r\n                <button type='submit'>Register</button>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Register","import React, { useContext, useEffect } from \"react\";\r\nimport \"./MainPage.css\";\r\nimport { UserContext } from \"../../../App\";\r\nimport logo from \"../../img/logo.png\";\r\n\r\nconst MainPage = () => {\r\n  const {\r\n    userName,\r\n    setUserName,\r\n    userPic,\r\n    setUserPic,\r\n    nav,\r\n    setNav,\r\n    userEmail,\r\n    setUserEmail,\r\n  } = useContext(UserContext);\r\n  return (\r\n    <div className=\"MainPage__page\">\r\n      <h1>\r\n        R-33 <img src={logo} alt=\"Logo\" />\r\n      </h1>\r\n      <div className=\"MainPage__profile\">\r\n        <img src={userPic} alt=\"userPic\" />\r\n        <h2>{userName}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MainPage;\r\n","import React from 'react'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport * as AiIcons from 'react-icons/ai'\r\n\r\n\r\n\r\nexport const SidebarData = [\r\n    {\r\n        title: 'Home',\r\n        path: '/mainPage',\r\n        icon: <AiIcons.AiFillHome />,\r\n        cNam: 'nav-text'\r\n    },\r\n    {\r\n        title: 'Games',\r\n        path: '/games',\r\n        icon: <FaIcons.FaGamepad />,\r\n        cNam: 'nav-text'\r\n    },\r\n\r\n]","import React, { useState } from \"react\";\r\nimport \"./SideBar.css\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { SidebarData } from \"../SidebarData\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nconst SideBar = ({ userName, userEmail }) => {\r\n  const [sidebar, setSidebar] = useState(false);\r\n  const history = useHistory();\r\n  const showSidebar = () => {\r\n    setSidebar(!sidebar);\r\n  };\r\n  const handleLogOut = () => {\r\n    fetch(\"/api/users/logout\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ userName, userEmail }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const { success, error } = data;\r\n        if (success) {\r\n          history.replace(\"/\");\r\n          Cookies.remove(\"loginToken\");\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: \"#fefbd8\" }}>\r\n        <div className=\"navBar\">\r\n          <Link to=\"#\" className=\"menu-bars\">\r\n            <FaIcons.FaBars onClick={showSidebar} />\r\n          </Link>\r\n        </div>\r\n        <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\r\n          <ul className=\"nav-menu-items\" onClick={showSidebar}>\r\n            <li className=\"navbar-toggle\">\r\n              <Link to=\"#\" className=\"menu-bars\">\r\n                <AiIcons.AiOutlineClose />\r\n              </Link>\r\n            </li>\r\n\r\n            {SidebarData.map((item, index) => {\r\n              return (\r\n                <li key={index} className={item.cNam}>\r\n                  <Link to={item.path}>\r\n                    {item.icon}\r\n                    <span>{item.title}</span>\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n            <li className=\"nav-logout\" onClick={handleLogOut}>\r\n              <BiIcons.BiLogOutCircle />\r\n              <span>L-Out</span>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport \"./Games.css\";\r\nimport tarneeb from \"../../img/tarneeb.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Games = () => {\r\n    const history = useHistory()\r\n    const handleClick = () => {\r\n        history.push(\"/tarneeb\")\r\n        window.location.reload()\r\n    }\r\n    return (\r\n        <div className=\"Games__page\">\r\n            <h1>Games </h1>\r\n            <div className=\"categories\">\r\n                <ul className=\"categories__tarneeb\" onClick={handleClick}>\r\n                    <h2>Tarneeb</h2>\r\n                    <img src={tarneeb} alt=\"tarneeb\" />\r\n                </ul>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default Games;\r\n","import React, { useEffect, useContext, useState } from 'react'\r\nimport './Tarneeb.css'\r\nimport chair from \"../../img/chair.png\";\r\nimport table from '../../img/badge.png'\r\nimport { UserContext } from \"../../../App\";\r\n\r\n\r\nconst players = [\r\n    { name: 'player 1', pic: chair },\r\n    { name: 'player 2', pic: chair },\r\n    { name: 'player 3', pic: chair },\r\n    { name: 'player 4', pic: chair }\r\n]\r\n\r\nconst Tarneeb = () => {\r\n    const {\r\n        userName,\r\n        setUserName,\r\n        userPic,\r\n        setUserPic,\r\n        nav,\r\n        setNav,\r\n        userEmail, setUserEmail\r\n    } = useContext(UserContext);\r\n\r\n    const [palyer, setPlayer] = useState(players)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        fetch('/api/users/connectedUsers', {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ userEmail }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let { success, error, info } = data;\r\n                if (success) {\r\n                    console.log(info)\r\n                }\r\n            });\r\n\r\n\r\n    }, [])\r\n\r\n    const handleSitPlayer = (index) => {\r\n        players[index].name = userName;\r\n        players[index].pic = userPic\r\n        const newPlayers = [...players]\r\n        setPlayer(newPlayers)\r\n\r\n\r\n    }\r\n    return (\r\n        <div className='tarneeb__page'>\r\n            <h1>Tarneeb</h1>\r\n            <div className=\"tarneeb__app\">\r\n\r\n                <div className='tarneeb__room'>\r\n                    <div className=\"room_player\" onClick={() => handleSitPlayer(0)}>\r\n                        <img src={palyer[0].pic} alt={palyer[0].name} />\r\n                        <h3>{palyer[0].name}</h3>\r\n                    </div>\r\n                    <div className='room__player-table'>\r\n                        <div className=\"room_player\" onClick={() => handleSitPlayer(3)}>\r\n                            <img src={palyer[3].pic} alt={palyer[3].name} />\r\n                            <h3>{palyer[3].name}</h3>\r\n                        </div>\r\n                        <img src={table} alt=\"table\" id='table' />\r\n                        <div className=\"room_player\" onClick={() => handleSitPlayer(1)}>\r\n                            <img src={palyer[1].pic} alt={palyer[1].name} />\r\n                            <h3>{palyer[1].name}</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className='room_player' onClick={() => handleSitPlayer(2)} >\r\n                        <img src={palyer[2].pic} alt={palyer[2].name} />\r\n                        <h3>{palyer[2].name}</h3>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"tarneeb__table\">\r\n                    <div className='table__playerName'>\r\n                        <span className='playr-col'>\r\n                            {palyer[0].name}\r\n                        </span>\r\n                        <span className='playr-col'>\r\n                            {palyer[1].name}\r\n                        </span>\r\n                        <span className='playr-col'>\r\n                            {palyer[2].name}\r\n                        </span>\r\n                        <span className='playr-col'>\r\n                            {palyer[3].name}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport default Tarneeb;","import React, { useState, createContext, useEffect } from 'react';\n\nimport './App.css';\nimport Login from \"./view/component/LogIn/LogIn\";\nimport Register from \"./view/component/Register/Register\";\nimport MainPage from './view/component/MainPage/MainPage';\nimport SideBar from './view/component/SideBar/SideBar';\nimport Games from './view/component/Games/Games';\nimport Tarneeb from './view/component/Tarneeb/Tarneeb';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory\n} from \"react-router-dom\";\n\nimport Cookies from \"js-cookie\";\nimport jwt from \"jsonwebtoken\";\n\nexport const UserContext = createContext(null)\n\n\n\nfunction App() {\n  const [nav, setNav] = useState(true)\n  const [userName, setUserName] = useState(\"\");\n  const [userPic, setUserPic] = useState(\"\");\n  const [userEmail, setUserEmail] = useState('')\n\n  useEffect(() => {\n    let token = Cookies.get(\"loginToken\");\n    if (token != null) {\n      const decoded = jwt.decode(token);\n      setUserPic(decoded.userPic);\n      setUserName(decoded.name);\n      setUserEmail(decoded.userName)\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n\n        <SideBar userEmail={userEmail} userName={userName} />\n\n        <div>\n          <UserContext.Provider value={{ userName, setUserName, userPic, setUserPic, nav, setNav, userEmail, setUserEmail }}>\n            <Switch>\n              <Route exact={true} path=\"/\" >\n                <Login />\n              </Route>\n              <Route path=\"/register\">\n                <Register />\n              </Route>\n\n              <Router path='/tarneeb'>\n                <Tarneeb />\n              </Router>\n              <Router path='/games'>\n                <Games />\n              </Router>\n              <Router path=\"/mainPage\">\n                <MainPage />\n              </Router>\n\n\n\n            </Switch>\n          </UserContext.Provider>\n        </div>\n      </Router>\n\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/chair.edcbcbf7.png\";"],"sourceRoot":""}